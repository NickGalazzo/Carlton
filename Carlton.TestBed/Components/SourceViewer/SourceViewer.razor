@using System.Net.Http
@using Microsoft.JSInterop;
@using Microsoft.CodeAnalysis.CSharp
@using Carlton.Base.Client.State

@namespace Carlton.TestBed.Components
@implements IAsyncDisposable
@inherits CarltonComponentBase<SourceViewerViewModel>
@inject IJSRuntime JSRuntime
@inject HttpClient client

<div class="test-component-source">
    @((MarkupString) ParsedText)
</div>

@code{
    private IJSObjectReference _module;

    private string ParsedText { get; set; } = "XXXX";


    protected async override Task OnParametersSetAsync()
    {
        ParsedText = $"<pre><code class='cshtml'>{ViewModel.ComponentSource}</code></pre>";
        await base.OnParametersSetAsync();
    }

    protected async override Task OnAfterRenderAsync(bool firstRender)
    {
        var projectName = "Carlton.TestBed";
        _module = await JSRuntime.InvokeAsync<IJSObjectReference>("import", $"./_content/{projectName}/js/sourceViewer.razor.js");
        await _module.InvokeAsync<Task>("highlightCodeBlock");
        await base.OnAfterRenderAsync(firstRender);
    }

    public async ValueTask DisposeAsync()
    {
        await _module.DisposeAsync();
    }
}