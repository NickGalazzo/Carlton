@page "/"
@using Carlton.Dashboard.Client.TestBed

@using Carlton.Dashboard.Components.ApartmentStatus;
@using Carlton.Dashboard.Components.HomeForDinner;
@using Carlton.Dashboard.Components.HouseholdItems;
@using Carlton.Dashboard.Components.Feed;
@using Carlton.Dashboard.Components.OverviewCards;
@using Carlton.Dashboard.Components.ToDos;
@using Carlton.Dashboard.Components.Tree;


@using Carlton.Dashboard.ViewModels.ApartmentStatus;
@using Carlton.Dashboard.ViewModels.HomeForDinner;
@using Carlton.Dashboard.ViewModels.HouseholdItems;
@using Carlton.Dashboard.ViewModels.ToDos;
@using Carlton.Dashboard.ViewModels.Feed;
@using Carlton.Dashboard.ViewModels.OverviewCards;
@using Carlton.Dashboard.ViewModels.CarltonTree;

<h1>Hello, world!</h1>

Welcome to your new app.

<Carlton.Dashboard.Components.Tree.CarltonTreeNew ViewModel="treeViewModel" />
<ToDoOverviewCard ViewModel="toDoOverviewCardViewModel" />
<HomeForDinnerCard ViewModel="homeForDinnerViewModel" />
<FeedListCard ViewModel="feedViewModel" />
<ToDoListCard ViewModel="toDoListViewModel" />
<ApartmentStatusList ViewModel="apartmentStatusViewModel" />
<HouseholdItemsList ViewModel="householdItemsViewModel" />

@code{
    public ApartmentStatusesViewModel apartmentStatusViewModel { get; set; }
    public HouseholdItemsViewModel householdItemsViewModel { get; set; }
    public ToDoListViewModel toDoListViewModel { get; set; }
    public FeedViewModel feedViewModel { get; set; }
    public HomeForDinnerViewModel homeForDinnerViewModel { get; set; }
    public ToDoOverviewCardViewModel toDoOverviewCardViewModel { get; set; }
    public CarltonTreeViewModel treeViewModel { get; set; }

    protected override void OnInitialized()
    {
        base.OnInitialized();


        var treeBuilder = new TestBedConfigurationBuilder();
        var tree = treeBuilder.AddComponent<SurveyPrompt>("Test 1")
                   .AddComponent<SurveyPrompt>("Test 2")
                   .AddComponent<SurveyPrompt>("Test 3")
                   .AddComponent<HomeForDinnerCard>("Whatever")
                   .Build();

        treeViewModel = new CarltonTreeViewModel(tree.ToList());

        toDoOverviewCardViewModel = new ToDoOverviewCardViewModel(7);



        apartmentStatusViewModel =
           new ApartmentStatusesViewModel()
           {
               Statuses = new List<ApartmentStatus>
               {
                    new ApartmentStatus("Garbage", ApartmentStatuses.Complete, "mdi-delete"),
                    new ApartmentStatus("Recycle", ApartmentStatuses.Complete, "mdi-recycle"),
                    new ApartmentStatus("Shopping", ApartmentStatuses.Complete, "mdi-cart"),
                    new ApartmentStatus("Cleaning", ApartmentStatuses.Complete, "mdi-spray-bottle"),
                    new ApartmentStatus("Laundry", ApartmentStatuses.Complete, "mdi-washing-machine"),
                    new ApartmentStatus("Dry Cleaning", ApartmentStatuses.Incomplete, "mdi-tie")
                   }
           };

        householdItemsViewModel = new HouseholdItemsViewModel
        {
            Items = new List<HouseholdItem>
        {
                new HouseholdItem(1, "Toilet Paper", 25),
                new HouseholdItem(2, "Paper Towels", 57),
                new HouseholdItem(3, "Dish Soap", 92),
                new HouseholdItem(4, "Swiffers", 36)
            }.OrderBy(o => o.PercentRemaining).ToList()
        };

        toDoListViewModel = new ToDoListViewModel
        {
            ToDoList = new List<ToDo>
        {
                new ToDo(1, "Take Out Garbage", false),
                new ToDo(2, "Go Shopping", false),
                new ToDo(3, "Prepare Dinner", true)
            }
        };

        feedViewModel = new FeedViewModel();

        feedViewModel.GroupedFeedItems.Add(
                new GroupedFeedItems
                {
                    GroupName = "Today",
                    Items = new List<FeedItem>
                    {
                        new FeedItem("Garbage", "Took Out Garbage",
                            new FeedUser("Nick", string.Empty)),
                        new FeedItem("Household Items", "Purchahsed Household Items",
                            new FeedUser("Nick", string.Empty))
                        }
                });

        feedViewModel.GroupedFeedItems.Add(
        new GroupedFeedItems
        {
            GroupName = "Yesterday",
            Items = new List<FeedItem>
            {
                    new FeedItem("Garbage", "Took Out Garbage",
                        new FeedUser("Nick", string.Empty)),
                    new FeedItem("Household Items", "Purchahsed Household Items",
                        new FeedUser("Nick", string.Empty))
                }
        });

        homeForDinnerViewModel = new HomeForDinnerViewModel()
        {
            DinnerGuests = new List<DinnerGuests>()
        {
               new DinnerGuests("Nick", true, string.Empty),
               new DinnerGuests("Steve", false, "Japaneese Class")
            }
        };
    }
}
