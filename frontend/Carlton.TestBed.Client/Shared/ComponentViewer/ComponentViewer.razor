@using  Newtonsoft.Json
@using Carlton.Base.Client.State

@inherits CarltonComponentBase<ComponentViewerViewModel>

<div class="test-bed">
    <div class="component">
        @TestComponentFragment
    </div>
</div>

@code {
    private RenderFragment TestComponentFragment { get; set; }

    protected override void OnParametersSet()
    {
        var componentType = ViewModel.ComponentType;
        
        if(!(typeof(ComponentBase).IsAssignableFrom(componentType)))
            throw new InvalidOperationException($"{componentType} is not a valid component type.");

        TestComponentFragment = builder =>
        {
            builder.OpenElement(1, "div");
            builder.OpenComponent(2, componentType);

            if(ViewModel.IsCarltonComponent)
            {
                builder.AddAttribute(1, "ViewModel", base.ViewModel.ComponentViewModel);

                builder.AddAttribute(2, "ComponentStatus", base.ViewModel.ComponentStatus);

                builder.AddAttribute(3, "OnComponentEvent", base.OnComponentEvent);
            }
            else
            {
                var i = 1;
                var componentParameters = (IDictionary<string, object>)ViewModel;
                foreach(var key in componentParameters.Keys)
                {
                    builder.AddAttribute(i, key, componentParameters[key]);
                }
            }

            builder.CloseComponent();
            builder.CloseElement();
        };
    }
}

