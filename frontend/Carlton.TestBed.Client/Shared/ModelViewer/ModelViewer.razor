@using Newtonsoft.Json
@using Carlton.Base.Client.State
@using Carlton.TestBed.Client.Shared.ViewModelViewer.Models

@inherits CarltonComponentBase<ModelViewerViewModel>

<div class="view-model-viewer">
    <div class="form-group">
        <textarea class="@(ViewModelIsValid ? string.Empty : "error")"
                  rows="8"
                  @onchange="OnViewModelChanged">
            @ViewModelJson
        </textarea>
    </div>
</div>



@code {
    private bool ViewModelIsValid { get; set; } = true;

    private string ViewModelJson { get; set; }

    protected override void OnParametersSet()
    {
        ViewModelJson = JsonConvert.SerializeObject(ViewModel.TestComponentViewModel, Formatting.Indented);
        base.OnParametersSet();
    }

    private async Task OnViewModelChanged(ChangeEventArgs args)
    {
        try
        {
            var currentType = ViewModel.TestComponentViewModel.GetType();
            var newVM = JsonConvert.DeserializeObject(args.Value.ToString(), currentType);
            ViewModelIsValid = true;
            await base.OnComponentEvent.InvokeAsync(new ModelViewerModelChangedEvent(newVM));
        }
        catch(Exception)
        {
            ViewModelIsValid = false;
        }
    }
}
