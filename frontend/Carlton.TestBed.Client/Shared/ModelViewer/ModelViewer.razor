@using Newtonsoft.Json
@using Carlton.Base.Client.State.Components
@using Carlton.TestBed.Client.Shared.ViewModelViewer.Models

@inherits CarltonComponentBase<object>

<div class="view-model-viewer">
    <div class="form-group">
        <textarea class="@(ViewModelIsValid ? string.Empty : "error")"
                  rows="8"
                  @bind="ViewModelJson"
                  @bind:event="OnViewModelChanged">
        </textarea>
    </div>
</div>


@code {
    private bool ViewModelIsValid { get; set; } = true;

    private string ViewModelJson { get; set; }

    protected override void OnParametersSet()
    {
        ViewModelJson = JsonConvert.SerializeObject(ViewModel, Formatting.Indented);
        base.OnParametersSet();
    }

    private async Task OnViewModelChanged()
    {
        try
        {
            var currentType = ViewModel.GetType();
            var newVM = JsonConvert.DeserializeObject(ViewModelJson, currentType);
            ViewModelIsValid = true;
            await base.OnComponentEvent.InvokeAsync(new ModelViewerModelChangedEvent(newVM));
        }
        catch(Exception)
        {
            ViewModelIsValid = false;
        }
    }
}
