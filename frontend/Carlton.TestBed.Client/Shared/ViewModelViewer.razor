@using Newtonsoft.Json

<div class="view-model-viewer">
    <div class="form-group">
        <textarea class="@(ViewModelIsInvalid ? "error" : string.Empty)" rows="8" @bind="ViewModelJson"></textarea>
    </div>
</div>


@code {

    [Parameter]
    public object ViewModel { get; set; }

    [Parameter]
    public EventCallback<object> ViewModelChanged { get; set; }

    private bool ViewModelIsInvalid { get; set; }

    private string _viewModelJson;
    public string ViewModelJson
    {
        get { return _viewModelJson; }

        set
        {
            try
            {
                _viewModelJson = value;
                var currentType = ViewModel.GetType();
                var newVM = JsonConvert.DeserializeObject(ViewModelJson, currentType);
                ViewModelChanged.InvokeAsync(newVM);
                ViewModelIsInvalid = false;
            }
            catch(Exception)
            {
                ViewModelIsInvalid = true;
            }
        }
    }

    protected override void OnInitialized()
    {
        base.OnInitialized();
        ViewModelJson = Newtonsoft.Json.JsonConvert.SerializeObject(ViewModel, Formatting.Indented);
    }
}
