@namespace Carlton.Base.Client.Components
<div class="select">
    <input readonly placeholder=" " value="@ValueDisplay" />
    <div class="label">@Label</div>

    @if(Disabled)
    {
        <div disabled class="options"></div>
    }
    else
    {
        <div class="options">
            @foreach(var opt in Options)
            {
                <div @onclick="()=>ValueChangedCallback.InvokeAsync(opt)">@opt.Value</div>
            }
        </div>
    }
</div>


@code{
    [Parameter]
    public bool Disabled { get; set; }

    [Parameter]
    public string Label { get; set; }

    [Parameter]
    public IReadOnlyDictionary<int, string> Options { get; set; } = new Dictionary<int, string>();

    [Parameter]
    public EventCallback<KeyValuePair<int, string>> ValueChangedCallback { get; set; }

    [Parameter]
    public int SelectedValue { get; set; }

    private string ValueDisplay
    {
        get
        {
            var returnValue = string.Empty;
            var success = Options.TryGetValue(SelectedValue, out returnValue);
            return returnValue;
        }
    }
}